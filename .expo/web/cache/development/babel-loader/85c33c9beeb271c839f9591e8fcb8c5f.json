{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/bahaamq/notes-app/App.js\";\nimport React from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport AppNavigator from \"./src/navigation/index\";\nimport { Provider as StoreProvider } from 'react-redux';\nimport store from \"./src/reducer/store\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport auth from '@react-native-firebase/auth';\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    var subscriber = auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return \"sadsd\";\n\n  if (!user) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Login\"));\n  }\n\n  return React.createElement(StoreProvider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(PaperProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(AppNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/home/bahaamq/notes-app/App.js"],"names":["React","Provider","PaperProvider","AppNavigator","StoreProvider","store","persistStore","persistReducer","AsyncStorage","useState","useEffect","auth","App","initializing","setInitializing","user","setUser","onAuthStateChanged","subscriber"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAQ,IAAIC,aAApB,QAAyC,oBAAzC;AACA,OAAOC,YAAP;AACA,SAAQF,QAAQ,IAAIG,aAApB,QAAwC,aAAxC;AACA,OAAOC,KAAP;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAUC,QAAV,EAAoBC,SAApB,QAAqC,OAArC;;;AAEA,OAAOC,IAAP,MAAiB,6BAAjB;AAEA,eAAe,SAASC,GAAT,GAAc;AAE1B,kBAAwCH,QAAQ,CAAC,IAAD,CAAhD;AAAA;AAAA,MAAOI,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAwBL,QAAQ,EAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AAGA,WAASC,kBAAT,CAA4BF,IAA5B,EAAkC;AAChCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,QAAIF,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;AACnB;;AAEDJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,UAAU,GAAGP,IAAI,GAAGM,kBAAP,CAA0BA,kBAA1B,CAAnB;AACA,WAAOC,UAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAMA,MAAIL,YAAJ,EAAkB,OAAO,OAAP;;AAElB,MAAI,CAACE,IAAL,EAAW;AACV,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AAGD,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAIV,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,CADF;AAOD","sourcesContent":["  \nimport React from 'react'\nimport {Provider as PaperProvider } from 'react-native-paper'\nimport AppNavigator from './src/navigation/index'\nimport {Provider as StoreProvider} from 'react-redux'\nimport store from './src/reducer/store'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport AsyncStorage from '@react-native-community/async-storage'\nimport  { useState, useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport auth from '@react-native-firebase/auth';\n\nexport default function App(){\n   // Set an initializing state whilst Firebase connects\n   const [initializing, setInitializing] = useState(true);\n   const [user, setUser] = useState();\n \n   // Handle user state changes\n   function onAuthStateChanged(user) {\n     setUser(user);\n     if (initializing) setInitializing(false);\n   }\n \n   useEffect(() => {\n     const subscriber = auth().onAuthStateChanged(onAuthStateChanged);\n     return subscriber; // unsubscribe on unmount\n   }, []);\n\n\n   if (initializing) return \"sadsd\";\n\n   if (!user) {\n    return (\n      <View>\n        <Text>Login</Text>\n      </View>\n    );\n  }\n\n\n  return (\n    <StoreProvider store = {store}>\n    <PaperProvider>\n      <AppNavigator/>\n    </PaperProvider>\n    </StoreProvider>\n  )\n}"]},"metadata":{},"sourceType":"module"}